物联网关设计

物联网关为通过以太网询问Modbus串行链路提供了有效途径。Modbus串行链路上运行的是Modbus/RTU协议
以太网上运行的的是Modbus/TCP协议，网关需要完成Modbus/RTU和Modbus/TCP之间的协议转换功能。再来
复习下Modbus/RTU和Modbus/TCP这两种帧协议之间的差距，如下图所示：

Modbus/RTU帧格式
                 ---------------------------------------------------
                 |起始位         |地址域 |功能码 |  数据   |CRC校验|
                 ---------------------------------------------------
                 |》=3.5字符时间 |1字节  |1字节  |0~252字节|2字节  |
                 ---------------------------------------------------	

Modbus TCP帧格式
                                         |                 | 
    --------------------------------------------------------
    |         MBAP帧头                   |  协议数据单元   |
    --------------------------------------------------------
    |事物标识符|协议标志符|长度  |单元标识|功能码|  数据   |
    --------------------------------------------------------
    |2字节     |2字节     |2字节 |1字节  |1字节  |0~252字节|
    --------------------------------------------------------

从图中可以看出，RTU和TCP帧具备完全相同的协议数据单元（PDU),除PDU外，TCP增加了专用的7字节MBAP
帧头组成了应用数据单元（ADU),由于Modbus/TCP利用IP地址寻址服务器，因此不需要通过地址域来区分不
同的客户端或服务器端，但是为了访问串行链路上的温控器，串行链路上的从站地址识别码需要在MBAP帧头
中的单元标志中注明。TCP/IP协议和链路层的校验机制可以保证数据包传递的正确性，因此Modbus/TCP帧也
不需要CRC校验。

物联网关只是实现Modbus/TCP与Modbus/RTU之间的协议转换功能，在硬件设计上，它比温控器更简单，少了
很多人机交互部分的需求。

其中最重要的是两个硬件接口模块：以太网模块和RS485模块。其中，以太网模块可以接收来自多个Modbus/TCP
客户端的请求，但RS485上只能存在一个Modbus/RTU请求和响应。因此，如何让多个Modbus/TCP客户端互斥和
独占使用RS485是整个网关设计中的核心。

从软件架构上讲，物联网关和温控器也使用完全相同的架构，基于操作系统ucos-ii的支持多任务管理与调度：
基于LWIP协议栈来实现TCP/IP通信。


网关服务器
网关服务器实现为并发模式，其设计原理同上节中温控器服务器的设计原理完全相同，都采用多任务的方式
完成。服务器主任务在网关运行过程中始终有效，负责与客户端建立连接并为新连接创建数据处理子任务，
子任务负责新连接上的数据封装处理，在数据处理接收后，子任务将自身删除。这里，网关服务器子任务
需要完成两个过程：意识接收来自客户端的Modbus/TCP命令帧，将之转换为Modbus/RTU帧后发送至Modbus串行
链路进行处理；二是把Modbus串行链路上返回的Modbus/RTU响应帧转换为Modbus/TCP消息后反馈给客户端。


子任务的工作流程：当接收到由客户端发来的Modbus/TCP请求帧后，子任务首先滤除帧长不合法的数据帧，
然后对长度合法的数据帧进行MBAP帧头分解，检验MBAP帧头中协议标志字段usPID是否为Modbus协议类型
（通过值0来标识），检验MBAP帧头中长度字段usLength是否正确，若验证合法，则构造Modbus/RTU帧并
调用FreeModbus协议栈eMBRTUSend函数发送。另一方面，子任务会在RS485接口上循环监测并接受Modbus/RTU
响应帧，在接收到响应帧后，验证Modbus/RTU数据帧帧长的合法性及校验CRC，若验证通过，则构造MBAP
帧头，封装成Modbus/TCP数据帧格式，通过Lwip协议栈的API函数发送到上位机系统或远程客户端，从而完成
整个过程。

在等待Modbus串行链路回应时，当前连接的子任务会一直等待串行设备的响应而独占使用串口资源，为了保证
其他连接的消息也能得到及时处理，而不至于因链路资源的独占性而受影响，设计中引入了串口互斥信号量
usart_sem，在新连接子任务进行串口资源访问时，首先需要获得互斥信号量，若串口资源被占用，则阻塞等待
(CPU可以处理其他的任务)，知道其他连接的子任务处理完数据帧后释放usart_sem。

